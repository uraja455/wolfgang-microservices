# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: ubuntu-latest
  
variables:
  ImageName: 'umakanth455/customerapi:$(Build.BuildId)'
  tag: '$(Build.BuildId)'

stages:
  - stage: Build
    displayName : Build and Push Docker image
    jobs:
    - job: Build
      displayName: Build and Push Image
      steps:
        
        - task: Docker@2
          inputs:
            containerRegistry: 'DockerSVC'
            repository: 'umakanth455/customerapi'
            command: 'buildAndPush'
            Dockerfile: '**/CustomerApi/CustomerApi/Dockerfile'
            buildContext: 'CustomerApi'
            arguments: '--build-arg BuildId=$(Build.BuildId)'
            tags: |
              $(tag)

        - pwsh: |
            $id=docker images --filter "label=test=$(Build.BuildId)" -q | Select-Object -First 1
            docker create --name testcontainer $id
            docker cp testcontainer:/testresults ./testresults
            docker rm testcontainer
          displayName: 'Copy test results'
 
        - task: PublishTestResults@2
          inputs:
            testResultsFormat: 'VSTest'
            testResultsFiles: '**/*.trx'
            searchFolder: '$(System.DefaultWorkingDirectory)/testresults'
          displayName: 'Publish test results'
 
        - task: PublishCodeCoverageResults@1
          inputs:
            codeCoverageTool: 'Cobertura'
            summaryFileLocation: '$(System.DefaultWorkingDirectory)/testresults/coverage/coverage.cobertura.xml'
            reportDirectory: '$(System.DefaultWorkingDirectory)/testresults/coverage/reports'
          displayName: 'Publish code coverage results'
  
